using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml;
using System.IO;

namespace MapEditor.Common
{
	public class MapRoom
	{
		public int Width;
		public int Height;
		public List<PlaceableInstance> Instances = new List<PlaceableInstance>();
		public string LinkedWith = null;

		public int InstanceCount
		{
			get { return Instances.Count; }
		}

		public void addInstance(PlaceableInstance instance)
		{
			Instances.Add(instance);
		}

		public XmlElement toXml(XmlDocument doc)
		{
			XmlElement self = doc.CreateElement("room");
			self.SetAttribute("width", Width.ToString());
			self.SetAttribute("height", Height.ToString());
			self.SetAttribute("linked", LinkedWith);
			return self;
		}

		public void saveRoomInstancesToXml()
		{
			string path = Manager.Project.ProjectSource + "\\amedata";

			if (!Directory.Exists(path))
			{
				Directory.CreateDirectory(path);
			}

			foreach (MapRoom room in Manager.Project.RoomList)
			{
				XmlDocument file = new XmlDocument();

				XmlComment comment = file.CreateComment("This Document is generated by Almora Map Editor, if you edit it by hand then you do so at your own risk!");
				XmlElement assets = file.CreateElement("assets");

				XmlElement instances = file.CreateElement("instances");

				foreach (PlaceableInstance place in room.Instances)
				{
					XmlElement elem = file.CreateElement("instance");
					elem.SetAttribute("name", place.Element.Name);
					elem.SetAttribute("x", place.X.ToString());
					elem.SetAttribute("y", place.Y.ToString());
					elem.SetAttribute("sprite", place.Element.Sprite);
					instances.AppendChild(elem);
				}

				assets.AppendChild(instances);

				file.AppendChild(comment);
				file.AppendChild(assets);

				file.Save(path + "\\" + this.LinkedWith + ".room.ame");

			}
		}
	}
}
