using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml;
using System.IO;

namespace MapEditor.Common
{
	public class MapRoom
	{
		public string Name;
		public int Width;
		public int Height;
		private int _instanceCount = 0;
		public List<PlaceableElement> Instances = new List<PlaceableElement>();

		public int InstanceCount
		{
			get { return _instanceCount; }
		}

		public void addInstance(PlaceableElement instance)
		{
			Instances.Add(instance);
			_instanceCount++;
		}

		public XmlElement toXml(XmlDocument doc)
		{
			XmlElement self = doc.CreateElement("room");
			self.SetAttribute("name", Name);
			self.SetAttribute("width", Width.ToString());
			self.SetAttribute("height", Height.ToString());
			return self;
		}

		public void saveRoomToXml()
		{
			XmlDocument file = new XmlDocument();

			XmlComment comment = file.CreateComment("This Document is generated by Almora Map Editor, if you edit it by hand then you do so at your own risk!");
			XmlElement assets = file.CreateElement("assets");

			XmlElement instances = file.CreateElement("instances");

			foreach (PlaceableInstance place in Manager.Project.PlacedInstances)
			{
				XmlElement elem = file.CreateElement("instance");
				elem.SetAttribute("name", place.Element.Name);
				elem.SetAttribute("x", place.X.ToString());
				elem.SetAttribute("y", place.Y.ToString());
				elem.SetAttribute("sprite", place.Element.Sprite);
				instances.AppendChild(elem);
			}

			assets.AppendChild(instances);

			file.AppendChild(comment);
			file.AppendChild(assets);

			string path = Manager.Project.ProjectSource + "\\amedata";

			if (!Directory.Exists(path))
			{
				Directory.CreateDirectory(path);
			}

			file.Save( path + "\\" + this.Name + ".room.ame");
		}
	}
}
